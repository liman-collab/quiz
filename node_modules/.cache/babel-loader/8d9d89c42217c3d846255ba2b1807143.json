{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sony Beshi Elect\\\\React Projects\\\\ICK\\\\quiz\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport QuizComponent from \"../QuizComponent/QuizComponent\";\nimport { QuizData } from \"../../questions.js\";\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\nimport \"./Quiz.css\";\nimport Button from \"../Buttons/Button\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = answer => {\n      const {\n        userAnswer,\n        score,\n        questions,\n        width,\n        currentQuestion,\n        quizEnd\n      } = this.state;\n\n      if (questions[currentQuestion].id < questions.length) {\n        this.setState({\n          currentQuestion: this.state.currentQuestion + 1,\n          width: width + 10\n        });\n\n        if (answer === questions[currentQuestion].answer) {\n          this.setState({\n            score: score + 1\n          });\n        }\n      } else {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n\n    this.rifilloLojen = () => {\n      this.setState({\n        userAnswer: null,\n        currentQuestion: 0,\n        questions: QuizData,\n        quizEnd: false,\n        score: 0,\n        width: 10\n      });\n    };\n\n    this.state = {\n      userAnswer: false,\n      currentQuestion: 0,\n      questions: QuizData,\n      quizEnd: false,\n      score: 0,\n      width: 0\n    };\n  }\n\n  render() {\n    const {\n      questions,\n      width,\n      currentQuestion,\n      userAnswer,\n      quizEnd,\n      score\n    } = this.state;\n\n    if (quizEnd) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Quiz\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \" \", \"Loja ka perfunduar Ju keni qelluar \", score + 1, \" pike nga\", \" \", questions.length), /*#__PURE__*/React.createElement(Button, {\n        name: \"Rifillo\",\n        ngjyra: \"#FF7F27\",\n        color: \"black\",\n        metoda: this.rifilloLojen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Quiz\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Pyetja: \", questions[currentQuestion].id), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, questions[currentQuestion].question), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"butonat\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        name: \"Sakte\",\n        ngjyra: \"#22B14C\",\n        color: \"white\",\n        metoda: () => this.checkAnswer(questions[currentQuestion].options[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        name: \"Pa sakte\",\n        ngjyra: \"#ED1C24\",\n        color: \"white\",\n        metoda: () => this.checkAnswer(questions[currentQuestion].options[1]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, \"Total te qelluara :\", score), /*#__PURE__*/React.createElement(Button, {\n        name: \"Rifillo\",\n        ngjyra: \"#FF7F27\",\n        color: \"black\",\n        metoda: this.rifilloLojen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"progress-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, `Pyetja Aktuale ${currentQuestion + 1}/${questions.length}`), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          float: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, \"Total Pyetje :\", questions.length), /*#__PURE__*/React.createElement(ProgressBar, {\n        width: width,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      })));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/Sony Beshi Elect/React Projects/ICK/quiz/src/components/Quiz/Quiz.js"],"names":["React","Component","QuizComponent","QuizData","ProgressBar","Button","Quiz","constructor","props","checkAnswer","answer","userAnswer","score","questions","width","currentQuestion","quizEnd","state","id","length","setState","rifilloLojen","render","question","options","float"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport QuizComponent from \"../QuizComponent/QuizComponent\";\r\nimport { QuizData } from \"../../questions.js\";\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport \"./Quiz.css\";\r\nimport Button from \"../Buttons/Button\";\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAnswer: false,\r\n      currentQuestion: 0,\r\n      questions: QuizData,\r\n      quizEnd: false,\r\n      score: 0,\r\n      width: 0,\r\n    };\r\n  }\r\n\r\n  checkAnswer = (answer) => {\r\n    const {\r\n      userAnswer,\r\n      score,\r\n      questions,\r\n      width,\r\n      currentQuestion,\r\n      quizEnd,\r\n    } = this.state;\r\n\r\n    if (questions[currentQuestion].id < questions.length) {\r\n      this.setState({\r\n        currentQuestion: this.state.currentQuestion + 1,\r\n        width: width + 10,\r\n      });\r\n\r\n      if (answer === questions[currentQuestion].answer) {\r\n        this.setState({\r\n          score: score + 1,\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({ quizEnd: true });\r\n    }\r\n  };\r\n\r\n  rifilloLojen = () => {\r\n    this.setState({\r\n      userAnswer: null,\r\n      currentQuestion: 0,\r\n      questions: QuizData,\r\n      quizEnd: false,\r\n      score: 0,\r\n      width: 10,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      width,\r\n      currentQuestion,\r\n      userAnswer,\r\n      quizEnd,\r\n      score,\r\n    } = this.state;\r\n\r\n    if (quizEnd) {\r\n      return (\r\n        <div className=\"Quiz\">\r\n          <h3>\r\n            {\" \"}\r\n            Loja ka perfunduar Ju keni qelluar {score + 1} pike nga{\" \"}\r\n            {questions.length}\r\n          </h3>\r\n          <Button\r\n            name=\"Rifillo\"\r\n            ngjyra=\"#FF7F27\"\r\n            color=\"black\"\r\n            metoda={this.rifilloLojen}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"Quiz\">\r\n          <h4>Pyetja: {questions[currentQuestion].id}</h4>\r\n          <h3>{questions[currentQuestion].question}</h3>\r\n          <div className=\"butonat\">\r\n            <Button\r\n              name=\"Sakte\"\r\n              ngjyra=\"#22B14C\"\r\n              color=\"white\"\r\n              metoda={() =>\r\n                this.checkAnswer(questions[currentQuestion].options[0])\r\n              }\r\n            />\r\n            <Button\r\n              name=\"Pa sakte\"\r\n              ngjyra=\"#ED1C24\"\r\n              color=\"white\"\r\n              metoda={() =>\r\n                this.checkAnswer(questions[currentQuestion].options[1])\r\n              }\r\n            />\r\n          </div>\r\n          <h3>Total te qelluara :{score}</h3>\r\n          <Button\r\n            name=\"Rifillo\"\r\n            ngjyra=\"#FF7F27\"\r\n            color=\"black\"\r\n            metoda={this.rifilloLojen}\r\n          />\r\n          <div className=\"progress-bar\">\r\n            <span>{`Pyetja Aktuale ${currentQuestion + 1}/${\r\n              questions.length\r\n            }`}</span>\r\n            <div style={{ float: \"right\" }}>\r\n              Total Pyetje :{questions.length}\r\n            </div>\r\n\r\n            <ProgressBar width={width} />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}