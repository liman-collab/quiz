{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sony Beshi Elect\\\\React Projects\\\\ICK\\\\quiz\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport QuizComponent from \"../QuizComponent/QuizComponent\";\nimport { QuizData } from \"../../questions.js\";\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\nimport \"./Quiz.css\";\nimport Button from \"../Buttons/Button\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = answer => {\n      const {\n        userAnswer,\n        score,\n        questions,\n        width,\n        currentQuestion\n      } = this.state;\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1,\n        width: width + 10\n      });\n\n      if (answer === questions[currentQuestion].answer) {\n        this.setState({\n          score: score + 1\n        });\n      } // if (questions[currentQuestion].id > questions.length) {\n      //   alert(\"fundi\");\n\n    };\n\n    this.rifilloLojen = () => {\n      this.setState({\n        userAnswer: null,\n        currentQuestion: 0,\n        questions: QuizData,\n        quizEnd: false,\n        score: 0,\n        width: 0\n      });\n    };\n\n    this.state = {\n      userAnswer: false,\n      currentQuestion: 0,\n      questions: QuizData,\n      quizEnd: false,\n      score: 0,\n      width: 0\n    };\n  }\n\n  render() {\n    const {\n      questions,\n      width,\n      options,\n      currentQuestion,\n      userAnswer\n    } = this.state;\n\n    if (questions[currentQuestion].id > questions.length) {\n      return alert(\"liman\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Quiz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Pyetja: \", questions[currentQuestion].id), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, questions[currentQuestion].question), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"#22B14C\",\n        color: \"white\"\n      },\n      onClick: () => this.checkAnswer(questions[currentQuestion].options[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Sakte\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"#ED1C24\",\n        color: \"white\"\n      },\n      onClick: () => this.checkAnswer(questions[currentQuestion].options[1]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, \"Pasakte\")), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Total te qelluara :\", this.state.score), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        backgroundColor: \"#FF7F27\",\n        color: \"black\"\n      },\n      onClick: this.rifilloLojen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Rifillo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, `Pyetja Aktuale ${currentQuestion + 1}/${questions.length}`), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Total Pyetje :\", this.state.questions.length), /*#__PURE__*/React.createElement(ProgressBar, {\n      width: width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/Sony Beshi Elect/React Projects/ICK/quiz/src/components/Quiz/Quiz.js"],"names":["React","Component","QuizComponent","QuizData","ProgressBar","Button","Quiz","constructor","props","checkAnswer","answer","userAnswer","score","questions","width","currentQuestion","state","setState","rifilloLojen","quizEnd","render","options","id","length","alert","question","backgroundColor","color","float"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport QuizComponent from \"../QuizComponent/QuizComponent\";\r\nimport { QuizData } from \"../../questions.js\";\r\nimport ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport \"./Quiz.css\";\r\nimport Button from \"../Buttons/Button\";\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAnswer: false,\r\n      currentQuestion: 0,\r\n      questions: QuizData,\r\n      quizEnd: false,\r\n      score: 0,\r\n      width: 0,\r\n    };\r\n  }\r\n\r\n  checkAnswer = (answer) => {\r\n    const { userAnswer, score, questions, width, currentQuestion } = this.state;\r\n\r\n    this.setState({\r\n      currentQuestion: this.state.currentQuestion + 1,\r\n      width: width + 10,\r\n    });\r\n\r\n    if (answer === questions[currentQuestion].answer) {\r\n      this.setState({\r\n        score: score + 1,\r\n      });\r\n    }\r\n\r\n    // if (questions[currentQuestion].id > questions.length) {\r\n    //   alert(\"fundi\");\r\n  };\r\n\r\n  rifilloLojen = () => {\r\n    this.setState({\r\n      userAnswer: null,\r\n      currentQuestion: 0,\r\n      questions: QuizData,\r\n      quizEnd: false,\r\n      score: 0,\r\n      width: 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      questions,\r\n      width,\r\n      options,\r\n      currentQuestion,\r\n      userAnswer,\r\n    } = this.state;\r\n\r\n    if (questions[currentQuestion].id > questions.length) {\r\n      return alert(\"liman\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"Quiz\">\r\n        <h4>Pyetja: {questions[currentQuestion].id}</h4>\r\n        <h3>{questions[currentQuestion].question}</h3>\r\n        <div>\r\n          <button\r\n            style={{ backgroundColor: \"#22B14C\", color: \"white\" }}\r\n            onClick={() =>\r\n              this.checkAnswer(questions[currentQuestion].options[0])\r\n            }\r\n          >\r\n            Sakte\r\n          </button>\r\n\r\n          <button\r\n            style={{ backgroundColor: \"#ED1C24\", color: \"white\" }}\r\n            onClick={() =>\r\n              this.checkAnswer(questions[currentQuestion].options[1])\r\n            }\r\n          >\r\n            Pasakte\r\n          </button>\r\n        </div>\r\n\r\n        <h3>Total te qelluara :{this.state.score}</h3>\r\n        <button\r\n          style={{ backgroundColor: \"#FF7F27\", color: \"black\" }}\r\n          onClick={this.rifilloLojen}\r\n        >\r\n          Rifillo\r\n        </button>\r\n        <div className=\"progress-bar\">\r\n          <span>{`Pyetja Aktuale ${currentQuestion + 1}/${\r\n            questions.length\r\n          }`}</span>\r\n          <div style={{ float: \"right\" }}>\r\n            Total Pyetje :{this.state.questions.length}\r\n          </div>\r\n\r\n          <ProgressBar width={width} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}