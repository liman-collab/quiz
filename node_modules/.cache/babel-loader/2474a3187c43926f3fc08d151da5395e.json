{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sony Beshi Elect\\\\React Projects\\\\ICK\\\\quiz\\\\src\\\\components\\\\Quiz\\\\Quiz.js\";\nimport React, { Component } from \"react\";\nimport QuizComponent from \"../QuizComponent/QuizComponent\";\nimport { QuizData } from \"../../questions.js\";\nimport \"./Quiz.css\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.nextQuestion = () => {\n      const {\n        userAnswer,\n        answer,\n        score,\n        questions,\n        currentQuestion\n      } = this.state;\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1,\n        disabled: true\n      });\n\n      if (userAnswer === questions[currentQuestion].options[0]) {\n        this.setState({\n          score: score + 1\n        });\n      } else {\n        alert(\"gabim\");\n      }\n\n      console.log(userAnswer);\n    };\n\n    this.checkAnswer = answer => {\n      this.setState({\n        userAnswer: answer,\n        disabled: false\n      });\n    };\n\n    this.finishGame = () => {\n      if (this.state.currentQuestion === QuizData.length - 1) {\n        this.setState({\n          quizEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      userAnswer: null,\n      currentQuestion: 0,\n      // options: [],\n      questions: QuizData,\n      quizEnd: false,\n      score: 0,\n      disabled: true\n    };\n  }\n\n  render() {\n    console.log();\n    const {\n      questions,\n      options,\n      currentQuestion,\n      userAnswer,\n      quizEnd,\n      disabled\n    } = this.state;\n\n    if (quizEnd) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, \"Game has ended\"));\n    } //console.log(currentQuestion);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, `Question ${currentQuestion}/${QuizData.length}`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"Score is :\", this.state.score), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, questions[currentQuestion].question), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.checkAnswer(questions[currentQuestion].options[0]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, questions[currentQuestion].options[0]), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.checkAnswer(questions[currentQuestion].options[1]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, questions[currentQuestion].options[1])), currentQuestion < QuizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n      disabled: this.state.disabled,\n      onClick: this.nextQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Next\"), currentQuestion === QuizData.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.finishGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Finish\"));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/Sony Beshi Elect/React Projects/ICK/quiz/src/components/Quiz/Quiz.js"],"names":["React","Component","QuizComponent","QuizData","Quiz","constructor","props","nextQuestion","userAnswer","answer","score","questions","currentQuestion","state","setState","disabled","options","alert","console","log","checkAnswer","finishGame","length","quizEnd","render","question"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport QuizComponent from \"../QuizComponent/QuizComponent\";\r\nimport { QuizData } from \"../../questions.js\";\r\nimport \"./Quiz.css\";\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAnswer: null,\r\n      currentQuestion: 0,\r\n      // options: [],\r\n      questions: QuizData,\r\n      quizEnd: false,\r\n      score: 0,\r\n      disabled: true,\r\n    };\r\n  }\r\n\r\n  nextQuestion = () => {\r\n    const {\r\n      userAnswer,\r\n      answer,\r\n      score,\r\n      questions,\r\n      currentQuestion,\r\n    } = this.state;\r\n\r\n    this.setState({\r\n      currentQuestion: this.state.currentQuestion + 1,\r\n      disabled: true,\r\n    });\r\n    if (userAnswer === questions[currentQuestion].options[0]) {\r\n      this.setState({\r\n        score: score + 1,\r\n      });\r\n    } else {\r\n      alert(\"gabim\");\r\n    }\r\n    console.log(userAnswer);\r\n  };\r\n\r\n  //check answer\r\n  checkAnswer = (answer) => {\r\n    this.setState({\r\n      userAnswer: answer,\r\n      disabled: false,\r\n    });\r\n  };\r\n\r\n  finishGame = () => {\r\n    if (this.state.currentQuestion === QuizData.length - 1) {\r\n      this.setState({\r\n        quizEnd: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log();\r\n    const {\r\n      questions,\r\n      options,\r\n      currentQuestion,\r\n      userAnswer,\r\n      quizEnd,\r\n      disabled,\r\n    } = this.state;\r\n\r\n    if (quizEnd) {\r\n      return (\r\n        <div>\r\n          <h2>Game has ended</h2>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    //console.log(currentQuestion);\r\n    return (\r\n      <div>\r\n        <span>{`Question ${currentQuestion}/${QuizData.length}`}</span>\r\n        <div>Score is :{this.state.score}</div>\r\n\r\n        <div>{questions[currentQuestion].question}</div>\r\n        <div>\r\n          <button\r\n            onClick={() =>\r\n              this.checkAnswer(questions[currentQuestion].options[0])\r\n            }\r\n          >\r\n            {questions[currentQuestion].options[0]}\r\n          </button>\r\n          <button\r\n            onClick={() =>\r\n              this.checkAnswer(questions[currentQuestion].options[1])\r\n            }\r\n          >\r\n            {questions[currentQuestion].options[1]}\r\n          </button>\r\n        </div>\r\n\r\n        {currentQuestion < QuizData.length - 1 && (\r\n          <button disabled={this.state.disabled} onClick={this.nextQuestion}>\r\n            Next\r\n          </button>\r\n        )}\r\n        {currentQuestion === QuizData.length - 1 && (\r\n          <button onClick={this.finishGame}>Finish</button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}